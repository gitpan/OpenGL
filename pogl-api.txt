POGL provides interfaces to support OpenGL APIs on
languages that do not support C pointers. This is
handled via suffixed APIs that support native-language
references:

    _c APIs provides (CPTR) interfaces for languages
    (eg: Perl) that provide a means to pass around C
    pointers.

    _s APIs provides (PACKED) string interfaces for
    most other languages. 

    _p are portable APIs that do not require passing
    pointers; instead, blocks of data may be passed
    around via (OGA) OpenGL::Array object references. 


@pixels = glReadPixels_p($x, $y, $width, $height, $format, $type);

glAccum($op, $value);
glActiveTextureARB($texture);
glAlphaFunc($func, $ref);
glAreTexturesResident_c($n, (CPTR)textures, (CPTR)residences);
(result,@residences) = glAreTexturesResident_p(@textureIDs);
glAreTexturesResident_s($n, (PACKED)textures, (PACKED)residences);
glArrayElement($i);
glArrayElementEXT($i);
glAttachObjectARB($containerObj, $obj);
glBegin($mode);
glBindAttribLocationARB($programObj, $index, $name);
glBindBufferARB($target,$buffer);
glBindFramebufferEXT($target,$framebuffer);
glBindProgramARB($target,$program);
glBindRenderbufferEXT(target,renderbuffer);
glBindTexture($target, $texture);
glBitmap_c($width, $height, $xorig, $yorig, $xmove, $ymove, (CPTR)bitmap);
glBitmap_p($width, $height, $xorig, $yorig, $xmove, $ymove, @bitmap);
glBitmap_s($width, $height, $xorig, $yorig, $xmove, $ymove, (PACKED)bitmap);
glBlendColor($red, $green, $blue, $alpha);
glBlendColorEXT($red, $green, $blue, $alpha);
glBlendEquation($mode);
glBlendEquationEXT($mode);
glBlendFunc($sfactor, $dfactor);
glBufferDataARB_c($target,$size,(CPTR)data,$usage);
glBufferDataARB_p($target,(OGA)data,$usage);
glBufferDataARB_s($target,$size,(PACKED)data,$usage);
glBufferSubDataARB_c($target,$offset,$size,(CPTR)data);
glBufferSubDataARB_p($target,$offset,(OGA)data);
glBufferSubDataARB_s($target,$offset,$size,(PACKED)data);
glCallList($list);
glCallLists_c($n, $type, (CPTR)lists);
glCallLists_p(@lists);
glCallLists_s($n, $type, (PACKED)lists);
glCheckFramebufferStatusEXT($target);
glClampColorARB($target,$clamp);
glClear($mask);
glClearAccum($red, $green, $blue, $alpha);
glClearColor($red, $green, $blue, $alpha);
glClearDepth($depth);
glClearIndex($c);
glClearStencil($s);
glClientActiveTextureARB($texture);
glClipPlane_c($plane, (CPTR)eqn);
glClipPlane_p($plane, $eqn0, $eqn1, $eqn2, $eqn3);
glClipPlane_s($plane, (PACKED)eqn);
glColor3b($red, $green, $blue);
glColor3bv_c((CPTR)v);
glColor3bv_p($red, $green, $blue, $alpha);
glColor3bv_s((PACKED)v);
glColor3d($red, $green, $blue);
glColor3dv_c((CPTR)v);
glColor3dv_p($red, $green, $blue, $alpha);
glColor3dv_s((PACKED)v);
glColor3f($red, $green, $blue);
glColor3fv_c((CPTR)v);
glColor3fv_p($red, $green, $blue, $alpha);
glColor3fv_s((PACKED)v);
glColor3i($red, $green, $blue);
glColor3iv_c((CPTR)v);
glColor3iv_p($red, $green, $blue, $alpha);
glColor3iv_s((PACKED)v);
glColor3s($red, $green, $blue);
glColor3sv_c((CPTR)v);
glColor3sv_p($red, $green, $blue, $alpha);
glColor3sv_s((PACKED)v);
glColor3ub($red, $green, $blue);
glColor3ubv_c((CPTR)v);
glColor3ubv_p($red, $green, $blue, $alpha);
glColor3ubv_s((PACKED)v);
glColor3ui($red, $green, $blue);
glColor3uiv_c((CPTR)v);
glColor3uiv_p($red, $green, $blue, $alpha);
glColor3uiv_s((PACKED)v);
glColor3us($red, $green, $blue);
glColor3usv_c((CPTR)v);
glColor3usv_p($red, $green, $blue, $alpha);
glColor3usv_s((PACKED)v);
glColor4b($red, $green, $blue, $alpha);
glColor4bv_c((CPTR)v);
glColor4bv_s((PACKED)v);
glColor4d($red, $green, $blue, $alpha);
glColor4dv_c((CPTR)v);
glColor4dv_s((PACKED)v);
glColor4f($red, $green, $blue, $alpha);
glColor4fv_c((CPTR)v);
glColor4fv_s((PACKED)v);
glColor4i($red, $green, $blue, $alpha);
glColor4iv_c((CPTR)v);
glColor4iv_s((PACKED)v);
glColor4s($red, $green, $blue, $alpha);
glColor4sv_c((CPTR)v);
glColor4sv_s((PACKED)v);
glColor4ub(red, green, blue, alpha);
glColor4ubv_c((CPTR)v);
glColor4ubv_s((PACKED)v);
glColor4ui($red, $green, $blue, $alpha);
glColor4uiv_c((CPTR)v);
glColor4uiv_s((PACKED)v);
glColor4us($red, $green, $blue, $alpha);
glColor4usv_c((CPTR)v);
glColor4usv_s((PACKED)v);
glColorMask($red, $green, $blue, $alpha);
glColorMaterial($face, $mode);
glColorPointerEXT_c($size, $type, $stride, $count, (CPTR)pointer);
glColorPointerEXT_p($size, (OGA)pointer);
glColorPointerEXT_s($size, $type, $stride, $count, (PACKED)pointer);
glColorPointer_c($size, $type, $stride, (CPTR)pointer);
glColorPointer_p($size, $type, $stride, (OGA)pointer);
glColorPointer_s($size, $type, $stride, (PACKED)pointer);
glCompileShaderARB($shaderObj);
glCopyPixels($x, $y, $width, $height, $type);
glCopyTexImage1D($target, $level, $internalFormat, $x, $y, $width, $border);
glCopyTexImage2D($target, $level, $internalFormat, $x, $y, $width, $height, $border);
glCopyTexSubImage1D($target, $level, $xoffset, $x, $y, $width);
glCopyTexSubImage2D($target, $level, $xoffset, $yoffset, $x, $y, $width, $height);
glCopyTexSubImage3D($target, $level, $xoffset, $yoffset, $zoffset, $x, $y, $width, $height);
$obj = glCreateProgramObjectARB();
glCreateShaderObjectARB($shaderType);
glCullFace($mode);
glDeleteBuffersARB_c($n,(CPTR)buffers);
glDeleteBuffersARB_p(@buffers);
glDeleteBuffersARB_s($n,(PACKED)buffers);
glDeleteFramebuffersEXT_c($n,(CPTR)framebuffers);
glDeleteFramebuffersEXT_p(@framebuffers);
glDeleteFramebuffersEXT_s($n,(PACKED)framebuffers);
glDeleteLists($list, $range);
glDeleteObjectARB($obj);
glDeleteProgramsARB_c($n,(PACKED)programs);
glDeleteProgramsARB_p(@programIDs);
glDeleteRenderbuffersEXT_c($n,(CPTR)renderbuffers);
glDeleteRenderbuffersEXT_p(@renderbuffers);
glDeleteRenderbuffersEXT_s($n,(PACKED)renderbuffers);
glDeleteTextures_c($items, (CPTR)list);
glDeleteTextures_p(@textureIDs);
glDeleteTextures_s($items, (PACKED)list);
glDepthFunc($func);
glDepthMask($flag);
glDepthRange($zNear, $zFar);
glDetachObjectARB($containerObj, $attachedObj);
glDisable($cap);
glDisableClientState($cap);
glDisableVertexAttribArrayARB($index);
glDrawArrays($mode, $first, $count);
glDrawArraysEXT($mode, $first, $count);
glDrawBuffer($mode);
glDrawBuffersARB_c($n,(CPTR)buffers);
glDrawBuffersARB_p(@buffers);
glDrawBuffersARB_s($n,(PACKED)buffers);
glDrawBuffers_c($n,(CPTR)buffers);
glDrawBuffers_p(@buffers);
glDrawBuffers_s($n,(PACKED)buffers);
glDrawElements_c($mode, $count, $type, (CPTR)indices);
glDrawElements_p($mode, @indices);
glDrawElements_s($mode, $count, $type, (PACKED)indices);
glDrawPixels_c($width, $height, $format, $type, (CPTR)pixels);
glDrawPixels_p($width, $height, $format, $type, @pixels);
glDrawPixels_s($width, $height, $format, $type, (PACKED)pixels);
glDrawRangeElements_c($mode, $start, $end, $count, $type, (CPTR)indices);
glDrawRangeElements_p($mode, $start, $end, $count, $type, @indices);
glDrawRangeElements_s($mode, $start, $end, $count, $type, (PACKED)indices);
glEdgeFlag($flag);
glEdgeFlagPointerEXT_c($stride, $count, (CPTR)pointer);
glEdgeFlagPointerEXT_p((OGA)pointer);
glEdgeFlagPointerEXT_s($stride, $count, (PACKED)pointer);
glEdgeFlagPointer_c($stride, (CPTR)pointer);
glEdgeFlagPointer_p($stride, (OGA)pointer);
glEdgeFlagPointer_s($stride, (PACKED)pointer);
glEnable($cap);
glEnableClientState($cap);
glEnableVertexAttribArrayARB($index);
glEndList();
glEvalCoord1d($u);
glEvalCoord1f($u);
glEvalCoord2d($u, $v);
glEvalCoord2f($u, $v);
glEvalMesh1($mode, $i1, $i2);
glEvalMesh2($mode, $i1, $i2, $j1, $j2);
glEvalPoint1($i);
glEvalPoint2($i, $j);
glFeedbackBuffer_c($size, $type, (CPTR)buffer);
glFinish();
glFlush();
glFogf($pname, $param);
glFogfv_c($pname, (CPTR)params);
glFogfv_p($pname, $param1, $param2=0, $param3=0, $param4=0);
glFogfv_s($pname, (PACKED)params);
glFogi($pname, $param);
glFogiv_c($pname, (CPTR)params);
glFogiv_p($pname, $param1, $param2=0, $param3=0, $param4=0);
glFogiv_s($pname, (PACKED)params);
glFramebufferRenderbufferEXT($target,$attachment,$renderbuffertarget,$renderbuffer);
glFramebufferTexture1DEXT($target,$attachment,$textarget,$texture,$level);
glFramebufferTexture2DEXT($target,$attachment,$textarget,$texture,$level);
glFrontFace($mode);
glFrustum($left, $right, $bottom, $top, $zNear, $zFar);
glGenBuffersARB_c($n,(CPTR)buffers);
@buffers = glGenBuffersARB_p($n);
glGenBuffersARB_s($n,(PACKED)buffers);
@framebuffers = glGenFramebuffersEXT_c($n);
glGenFramebuffersEXT_s($n,(PACKED)framebuffers);
glGenLists($range);
@programIDs = glGenProgramsARB_c($n);
glGenProgramsARB_s($n,(PACKED)programs);
@renderbuffers = glGenRenderbuffersEXT_c($n);
glGenRenderbuffersEXT_s($n,(PACKED)renderbuffers);
glGenTextures_c($n, (CPTR)textures);
@textureIDs = glGenTextures_p($n);
glGenTextures_s($n, (PACKED)textures);
glGenerateMipmapEXT($target);
glGetActiveAttribARB_c($programObj, $index, $maxLength, (CPTR)length, (CPTR)size, (CPTR)type, (CPTR)name);
($name,$type,$size) = glGetActiveAttribARB_p($programObj, $index);
glGetActiveAttribARB_s($programObj, $index, $maxLength, (PACKED)length, (PACKED)size, (PACKED)type, (PACKED)name);
glGetActiveUniformARB_c($programObj, $index, $maxLength, (CPTR)length, (CPTR)size, (CPTR)type, (CPTR)name);
($name,$type,$size) = glGetActiveUniformARB_p($programObj, $index);
glGetActiveUniformARB_s($programObj, $index, $maxLength, (PACKED)length, (PACKED)size, (PACKED)type, (PACKED)name);
glGetAttachedObjectsARB_c($containerObj, $maxCount, (CPTR)count, (CPTR)obj);
@objs = glGetAttachedObjectsARB_p($containerObj);
glGetAttachedObjectsARB_s($containerObj, $maxCount, (PACKED)count, (PACKED)obj);
glGetAttribLocationARB_c($programObj, (CPTR)name);
$value = glGetAttribLocationARB_p(programObj, $name);
glGetAttribLocationARB_s($programObj, (PACKED)name);   ## Missing?
glGetBooleanv_c($pname, (CPTR)params);
@data = glGetBooleanv_p($param);
glGetBooleanv_s($pname, (PACKED)params);
glGetBufferParameterivARB_c($target,$pname,(CPTR)params);
@params = glGetBufferParameterivARB_p($target,$pname);
glGetBufferParameterivARB_s($target,$pname,(PACKED)params);
glGetBufferPointervARB_c($target,$pname,(CPTR)params);
$oga = glGetBufferPointervARB_p($target,$pname,@types);
glGetBufferPointervARB_s($target,$pname,(PACKED)params);
$oga = glGetBufferSubDataARB_p($target,$offset,$count,@types);
glGetClipPlane_c($plane, (CPTR)eqn);
@data = glGetClipPlane_p($plane);
glGetClipPlane_s($plane, (PACKED)eqn);
glGetDoublev_c($pname, (CPTR)params);     ## Missing?
glGetDoublev_s($pname, (PACKED)params);   ## Missing?
@data = glGetDoublev_p($param);
glGetError();
glGetFloatv_c($pname, (CPTR)params);
@data = glGetFloatv_p($param);
glGetFloatv_s($pname, (PACKED)params);
glGetFramebufferAttachmentParameterivEXT_c($target,$attachment,$pname,(CPTR)params);
glGetFramebufferAttachmentParameterivEXT_s($target,$attachment,$pname,(PACKED)params);
glGetHandleARB($pname);
$infoLog = glGetInfoLogARB_c($obj);
@data = glGetIntegerv_p($param);
glGetIntegerv_c($pname, (CPTR)params);
glGetIntegerv_s($pname, (PACKED)params);
glGetLightfv_c($light, $pname, (CPTR)p);
@data = glGetLightfv_p($light, $pname);
glGetLightfv_s($light, $pname, (PACKED)p);
glGetLightiv_c($light, $pname, (CPTR)p);
@data = glGetLightiv_p($light, $pname);
glGetLightiv_s($light, $pname, (PACKED)p);
glGetMapdv_c($target, $query, (CPTR)v);
@data = glGetMapdv_p($target, $query);
glGetMapdv_s($target, $query, (PACKED)v);
glGetMapfv_c($target, $query, (CPTR)v);
@data = glGetMapfv_p($target, $query);
glGetMapfv_s($target, $query, (PACKED)v);
glGetMapiv_c($target, $query, (CPTR)v);
@data = glGetMapiv_p($target, $query);
glGetMapiv_s($target, $query, (PACKED)v);
glGetMaterialfv_c($face, $query, (CPTR)params);
@params = glGetMaterialfv_p($face, $query);
glGetMaterialfv_s($face, $query, (PACKED)params);
glGetMaterialiv_c($face, $query, (CPTR)params);
@params = glGetMaterialiv_p($face, $query);
glGetMaterialiv_s($face, $query, (PACKED)params);
glGetObjectParameterfvARB_c($obj,$pname,(CPTR)params);
$param = glGetObjectParameterfvARB_p($obj,$pname);
glGetObjectParameterfvARB_s($obj,$pname,(PACKED)params);
glGetObjectParameterivARB_c($obj,$pname,(CPTR)params);  ## Missing?
$param = glGetObjectParameterivARB_p($obj,$pname);
glGetObjectParameterivARB_s($obj,$pname,(PACKED)params);
glGetPixelMapfv_c($map, (CPTR)values);
@data = glGetPixelMapfv_p($map);
glGetPixelMapfv_s($map, (PACKED)values);
glGetPixelMapuiv_c($map, (CPTR)values);
@data = glGetPixelMapuiv_p($map);
glGetPixelMapuiv_s($map, (PACKED)values);
glGetPixelMapusv_c($map, (CPTR)values);
@data = glGetPixelMapusv_p($map);
glGetPixelMapusv_s($map, (PACKED)values);
glGetPointerv_c($pname, (CPTR)params);
@params = glGetPointerv_p($pname);
glGetPointerv_s($pname, (PACKED)params);
glGetPolygonStipple_c((CPTR)mask);
@mask = glGetPolygonStipple_p();
glGetPolygonStipple_s((PACKED)mask);
glGetProgramEnvParameterdvARB_c($target,$index,(CPTR)params);
@params = glGetProgramEnvParameterdvARB_p($target,$index);
glGetProgramEnvParameterdvARB_s($target,$index,(PACKED)params);
glGetProgramEnvParameterfvARB_c($target,$index,(CPTR)params);
@params = glGetProgramEnvParameterfvARB_p($target,$index);
glGetProgramEnvParameterfvARB_s($target,$index,(PACKED)params);
glGetProgramLocalParameterdvARB_c($target,$index,(CPTR)params);
@params = glGetProgramLocalParameterdvARB_p($target,$index);
glGetProgramLocalParameterdvARB_s($target,$index,(PACKED)params);
glGetProgramLocalParameterfvARB_c($target,$index,(CPTR)params);
@params = glGetProgramLocalParameterfvARB_p($target,$index);
glGetProgramLocalParameterfvARB_s($target,$index,(PACKED)params);
glGetProgramStringARB_c(target,pname,(CPTR)string);
$string = glGetProgramStringARB_p(target[,pname]);
glGetProgramStringARB_s(target,pname,(PACKED)string);
glGetProgramivARB_c($target,$pname,(CPTR)params);
$value = glGetProgramivARB_p($target,$pname);
glGetProgramivARB_s($target,$pname,(PACKED)params);
glGetRenderbufferParameterivEXT_c($target,$pname,(CPTR)params);
glGetRenderbufferParameterivEXT_s($target,$pname,(PACKED)params);
glGetShaderSourceARB_c($obj, $maxLength, (CPTR)length, (CPTR)source);
$source = glGetShaderSourceARB_p($obj);
glGetShaderSourceARB_s($obj, $maxLength, (PACKED)length, (PACKED)source);  ## Missing?
$string = glGetString($name);
glGetTexEnvfv_c($target, $pname, (CPTR)params);
@parames = glGetTexEnvfv_p($target, $pname);
glGetTexEnvfv_s($target, $pname, (PACKED)params);
glGetTexEnviv_c($target, $pname, (CPTR)params);
@parames = glGetTexEnviv_p($target, $pname);
glGetTexEnviv_s($target, $pname, (PACKED)params);
glGetTexGendv_c($coord, $pname, (CPTR)params);
@params = glGetTexGendv_p($coord, $pname);
glGetTexGendv_s($coord, $pname, (PACKED)params);  ## Missing?
glGetTexGenfv_c($coord, $pname, (CPTR)params);
@params = glGetTexGenfv_p($coord, $pname);
glGetTexGenfv_s($coord, $pname, (PACKED)params);
glGetTexGeniv_c($coord, $pname, (CPTR)params);
@params = glGetTexGeniv_p($coord, $pname);
glGetTexGeniv_s($coord, $pname, (PACKED)params);
glGetTexImage_c($target, $level, $format, $type, (CPTR)pixels);
@pixels = glGetTexImage_p($target, $level, $format, $type);
glGetTexImage_s($target, $level, $format, $type, (PACKED)pixels);
glGetTexLevelParameterfv_c($target, $level, $pname, (CPTR)params);
@params = glGetTexLevelParameterfv_p($target, $level, $pname);
glGetTexLevelParameterfv_s($target, $level, $pname, (PACKED)params);
glGetTexLevelParameteriv_c($target, $level, $pname, (CPTR)params);
@params = glGetTexLevelParameteriv_p($target, $level, $pname);
glGetTexLevelParameteriv_s($target, $level, $pname, (PACKED)params);
glGetTexParameterfv_c($target, $pname, (CPTR)params);
@params = glGetTexParameterfv_p($target, $pname);
glGetTexParameterfv_s($target, $pname, (PACKED)params);
glGetTexParameteriv_c($target, $pname, (CPTR)params);
@params = glGetTexParameteriv_p($target, $pname);
glGetTexParameteriv_s($target, $pname, (PACKED)params);
glGetUniformLocationARB_c($programObj, (CPTR)name);
$value = glGetUniformLocationARB_p($programObj, $name);
glGetUniformLocationARB_s($programObj, (PACKED)name);  ## Missing?
glGetUniformfvARB_c($programObj, $location, (CPTR)params);
@params = glGetUniformfvARB_p($programObj, $location[, $count]);
glGetUniformfvARB_s($programObj, $location, (PACKED)params);  ## Missing?
glGetUniformivARB_c($programObj, $location, (CPTR)params);
@params = glGetUniformivARB_p($programObj, $location[, $count]);
glGetUniformivARB_s($programObj, $location, (PACKED)params);  ## Missing?
glGetVertexAttribPointervARB_c($index,$pname,(CPTR)pointer);
$param = glGetVertexAttribPointervARB_p($index,$pname);
glGetVertexAttribPointervARB_s($index,$pname,(PACKED)pointer);  ## Missing?
glGetVertexAttribdvARB_c($index,$pname,(CPTR)params);
$param = glGetVertexAttribdvARB_p($index,$pname);
glGetVertexAttribdvARB_s($index,$pname,(PACKED)params);
glGetVertexAttribfvARB_c($index,$pname,(CPTR)params);
$param = glGetVertexAttribfvARB_p($index,$pname);
glGetVertexAttribfvARB_s($index,$pname,(PACKED)params);
glGetVertexAttribivARB_c($index,$pname,(CPTR)params);
$param = glGetVertexAttribivARB_p($index,$pname);
glGetVertexAttribivARB_s($index,$pname,(PACKED)params);
glHint($target, $mode);
glIndexPointerEXT_c($type, $stride, $count, (CPTR)pointer);
glIndexPointerEXT_p((OGA)pointer);
glIndexPointerEXT_s($type, $stride, $count, (PACKED)pointer);
glIndexPointer_c($type, $stride, (CPTR)pointer);
glIndexPointer_p($type, $stride, (OGA)pointer);
glIndexPointer_s($type, $stride, (PACKED)pointer);
glIndexd($c);
glIndexi($c);
glInitNames();
glInterleavedArrays_c($format, $stride, (CPTR)pointer);
glIsBufferARB($buffer);
glIsEnabled($cap);
glIsFramebufferEXT($framebuffer);
glIsList(list);
glIsProgramARB(program);
glIsRenderbufferEXT(renderbuffer);
glIsTexture($list);
glLightModelf($pname, $param);
glLightModelfv_c($pname, (CPTR)params);
glLightModelfv_p($pname, @params);
glLightModelfv_s($pname, (PACKED)params);
glLightModeli($pname, $param);
glLightModeliv_c($pname, (CPTR)params);
glLightModeliv_p($pname, @params);
glLightModeliv_s($pname, (PACKED)params);
glLightf($light, $pname, $param);
glLightfv_c($light, $pname, (CPTR)params);
glLightfv_p($light, $pname, @params);
glLightfv_s($light, $pname, (PACKED)params);
glLighti($light, $pname, $param);
glLightiv_c($light, $pname, (CPTR)params);
glLightiv_p($light, $pname, @params);
glLightiv_s($light, $pname, (PACKED)params);
glLineStipple($factor, $pattern);
glLineWidth($width);
glLinkProgramARB($programObj);
glListBase($base);
glLoadIdentity();
glLoadMatrixd_c((CPTR)m);
glLoadMatrixd_p(@m);
glLoadMatrixd_s((PACKED)m);
glLoadMatrixf_c((CPTR)m);
glLoadMatrixf_p(@m);
glLoadMatrixf_s((PACKED)m);
glLoadName($name);
glLogicOp($opcode);
glMap1d_c($target, $u1, $u2, $stride, $order, (CPTR)points);
glMap1d_p($target, $u1, $u2, @points);
glMap1d_s($target, $u1, $u2, $stride, $order, (PACKED)points);
glMap1f_c($target, $u1, $u2, $stride, $order, (CPTR)points);
glMap1f_p($target, $u1, $u2, @points);
glMap1f_s($target, $u1, $u2, $stride, $order, (PACKED)points);
glMap2d_c($target, $u1, $u2, $ustride, $uorder, $v1, $v2, $vstride, $vorder, (CPTR)points);
glMap2d_p($target, $u1, $u2, $uorder, $v1, $v2, @points);
glMap2d_s($target, $u1, $u2, $ustride, $uorder, $v1, $v2, $vstride, $vorder, (PACKED)points);
glMap2f_c($target, $u1, $u2, $ustride, $uorder, $v1, $v2, $vstride, $vorder, (CPTR)points);
glMap2f_p($target, $u1, $u2, $uorder, $v1, $v2, @points);
glMap2f_s($target, $u1, $u2, $ustride, $uorder, $v1, $v2, $vstride, $vorder, (PACKED)points);
(CPTR)buffer = glMapBufferARB_c($target,$access);
$oga = glMapBufferARB_p($target,$access,@types);
(PACKED)buffer = glMapBufferARB_c($target,$access);
glMapGrid1d($un, $u1, $u2);
glMapGrid1f($un, $u1, $u2);
glMapGrid2d($un, $u1, $u2, $vn, $v1, $v2);
glMapGrid2f($un, $u1, $u2, $vn, $v1, $v2);
glMaterialf($face, $pname, $param);
glMaterialfv_c($face, $pname, (CPTR)param);
glMaterialfv_s($face, $pname, @param);
glMateriali($face, $pname, $param);
glMaterialiv_c($face, $pname, (CPTR)param);
glMaterialiv_s($face, $pname, @param);
glMatrixMode($mode);
glMultMatrixd_p(@m);
glMultMatrixf_p(@m);
glMultiTexCoord1dvARB_c($target,(CPTR)v);
glMultiTexCoord1dvARB_p($target,$s);
glMultiTexCoord1dvARB_s($target,(PACKED)v);
glMultiTexCoord1fARB($target,$s);
glMultiTexCoord1fvARB_c($target,(CPTR)v);
glMultiTexCoord1fvARB_p($target,$s);
glMultiTexCoord1fvARB_s($target,(PACKED)v);
glMultiTexCoord1iARB($target,$s);
glMultiTexCoord1ivARB_c($target,(CPTR)v);
glMultiTexCoord1ivARB_p($target,$s);
glMultiTexCoord1ivARB_s($target,(PACKED)v);
glMultiTexCoord1sARB($target,$s);
glMultiTexCoord1svARB_c($target,(CPTR)v);
glMultiTexCoord1svARB_p($target,$s);
glMultiTexCoord1svARB_s($target,(PACKED)v);
glMultiTexCoord2dARB($target,$s,$t);
glMultiTexCoord2dvARB_c(target,(CPTR)v);
glMultiTexCoord2dvARB_p($target,$s,$t);
glMultiTexCoord2dvARB_s(target,(PACKED)v);
glMultiTexCoord2fARB($target,$s,$t);
glMultiTexCoord2fvARB_c($target,(CPTR)v);
glMultiTexCoord2fvARB_p($target,$s,$t);
glMultiTexCoord2fvARB_s($target,(PACKED)v);
glMultiTexCoord2iARB($target,$s,$t);
glMultiTexCoord2ivARB_c($target,(CPTR)v);
glMultiTexCoord2ivARB_p($target,$s,$t);
glMultiTexCoord2ivARB_s($target,(PACKED)v);
glMultiTexCoord2sARB($target,$s,$t);
glMultiTexCoord2svARB_c($target,(CPTR)v);
glMultiTexCoord2svARB_p($target,$s,$t);
glMultiTexCoord2svARB_s($target,(PACKED)v);
glMultiTexCoord3dARB($target,$s,$t,$r);
glMultiTexCoord3dvARB_c(target,(CPTR)v);
glMultiTexCoord3dvARB_p($target,$s,$t,$r);
glMultiTexCoord3dvARB_s(target,(PACKED)v);
glMultiTexCoord3fARB($target,$s,$t,$r);
glMultiTexCoord3fvARB_c($target,(CPTR)v);
glMultiTexCoord3fvARB_p($target,$s,$t,$r);
glMultiTexCoord3fvARB_s($target,(PACKED)v);
glMultiTexCoord3iARB($target,$s,$t,$r);
glMultiTexCoord3ivARB_c($target,(CPTR)v);
glMultiTexCoord3ivARB_p($target,$s,$t,$r);
glMultiTexCoord3ivARB_s($target,(PACKED)v);
glMultiTexCoord3sARB($target,$s,$t,$r);
glMultiTexCoord3svARB_c($target,(CPTR)v);
glMultiTexCoord3svARB_p($target,$s,$t,$r);
glMultiTexCoord3svARB_s($target,(PACKED)v);
glMultiTexCoord4dARB($target,$s,$t,$r,$q);
glMultiTexCoord4dvARB_c($target,(CPTR)v);
glMultiTexCoord4dvARB_p($target,$s,$t,$r,$q);
glMultiTexCoord4dvARB_s($target,(PACKED)v);
glMultiTexCoord4fARB($target,$s,$t,$r,$q);
glMultiTexCoord4fvARB_c($target,(CPTR)v);
glMultiTexCoord4fvARB_p($target,$s,$t,$r,$q);
glMultiTexCoord4fvARB_s($target,(PACKED)v);
glMultiTexCoord4ivARB_c($target,(CPTR)v);
glMultiTexCoord4ivARB_p($target,$s,$t,$r,$q);
glMultiTexCoord4ivARB_s($target,(PACKED)v);
glMultiTexCoord4sARB($target,$s,$t,$r,$q);
glMultiTexCoord4svARB_c($target,(CPTR)v);
glMultiTexCoord4svARB_p($target,$s,$t,$r,$q);
glMultiTexCoord4svARB_s($target,(PACKED)v);
glNewList($list, $mode);
glNormal3b($nx, $ny, $nz);
glNormal3bv_c((CPTR)v);
glNormal3bv_p($nx, $ny, $nz);
glNormal3bv_s((PACKED)v);
glNormal3d($nx, $ny, $nz);
glNormal3dv_c((CPTR)v);
glNormal3dv_p($nx, $ny, $nz);
glNormal3dv_s((PACKED)v);
glNormal3f($nx, $ny, $nz);
glNormal3fv_c((CPTR)v);
glNormal3fv_p($nx, $ny, $nz);
glNormal3fv_s((PACKED)v);
glNormal3i($nx, $ny, $nz);
glNormal3iv_c((CPTR)v);
glNormal3iv_p($nx, $ny, $nz);
glNormal3iv_s((PACKED)v);
glNormal3s($nx, $ny, $nz);
glNormal3sv_c((CPTR)v);
glNormal3sv_p($nx, $ny, $nz);
glNormal3sv_s((PACKED)v);
glNormalPointerEXT_c($type, $stride, $count, (CPTR)pointer);
glNormalPointerEXT_p((OGA)pointer);
glNormalPointerEXT_s($type, $stride, $count, (PACKED)pointer);
glNormalPointer_c($type, $stride, (CPTR)pointer);
glNormalPointer_s($type, $stride, (OGA)pointer);
glOrtho($left, $right, $bottom, $top, $zNear, $zFar);
glPassThrough($token);
glPixelMapfv_c($map, $mapsize, (CPTR)values);
glPixelMapfv_p($map, @values);
glPixelMapfv_s($map, $mapsize, (PACKED)values);
glPixelMapuiv_c($map, $mapsize, (CPTR)values);
glPixelMapuiv_p($map, @values);
glPixelMapuiv_s($map, $mapsize, (PACKED)values);
glPixelMapusv_c($map, $mapsize, (CPTR)values);
glPixelMapusv_p($map, @values);
glPixelMapusv_s($map, $mapsize, (PACKED)values);
glPixelStoref($pname, $param);
glPixelStorei($pname, $param);
glPixelTransferf($pname, $param);
glPixelTransferi($pname, $param);
glPixelZoom($xfactor, $yfactor);
glPointParameterfARB($pname,$param);
glPointParameterfvARB_c($pname,(CPTR)params);
glPointParameterfvARB_p($pname,@params);
glPointParameterfvARB_s($pname,(PACKED)params);
glPointSize($size);
glPolygonMode($face, $mode);
glPolygonOffset($factor, $units);
glPolygonStipple_c((CPTR)mask);
glPolygonStipple_p(@mask);
glPolygonStipple_s((PACKED)mask);
glPopAttrib();
glPopClientAttrib();
glPopMatrix();
glPopName();
glPrioritizeTextures_c($n, (CPTR)textures, (CPTR)priorities);
glPrioritizeTextures_p(@textureIDs, @priorities);
glPrioritizeTextures_s($n, (PACKED)textures, (PACKED)priorities);
glProgramEnvParameter4dARB($target,$index,$x,$y,$z,$w);
glProgramEnvParameter4dvARB_c($target,$index,(CPTR)v);
glProgramEnvParameter4dvARB_p($target,$index,$x,$y,$z,$w);
glProgramEnvParameter4dvARB_s($target,$index,(PACKED)v);
glProgramEnvParameter4fARB($target,$index,$x,$y,$z,$w);
glProgramEnvParameter4fvARB_c($target,$index,(CPTR)v);
glProgramEnvParameter4fvARB_p($target,$index,$x,$y,$z,$w);
glProgramEnvParameter4fvARB_s($target,$index,(PACKED)v);
glProgramLocalParameter4dARB($target,$index,$x,$y,$z,$w);
glProgramLocalParameter4dvARB_c($target,$index,(CPTR)v);
glProgramLocalParameter4dvARB_p($target,$index,$x,$y,$z,$w);
glProgramLocalParameter4dvARB_s($target,$index,(PACKED)v);
glProgramLocalParameter4fARB($target,$index,$x,$y,$z,$w);
glProgramLocalParameter4fvARB_c($target,$index,(CPTR)v);
glProgramLocalParameter4fvARB_p($target,$index,$x,$y,$z,$w);
glProgramLocalParameter4fvARB_s($target,$index,(PACKED)v);
glProgramStringARB_c($target,$format,$len,(CPTR)string);
glProgramStringARB_p($target,$string);
glProgramStringARB_s($target,$format,$len,(PACKED)string);
glPushAttrib($mask);
glPushClientAttrib($mask);
glPushMatrix();
glPushName($name);
glRasterPos2d(x, y);
glRasterPos2dv_c((CPTR)v);
glRasterPos2dv_p($x, $y);
glRasterPos2dv_s((PACKED)v);
glRasterPos2f($x, $y);
glRasterPos2fv_c((CPTR)v);
glRasterPos2fv_p($x, $y);
glRasterPos2fv_s((PACKED)v);
glRasterPos2i($x, $y);
glRasterPos2iv_c((CPTR)v);
glRasterPos2iv_p($x, $y);
glRasterPos2iv_s((PACKED)v);
glRasterPos2s($x, $y);
glRasterPos2sv_c((CPTR)v);
glRasterPos2sv_p($x, $y);
glRasterPos2sv_s((PACKED)v);
glRasterPos3d($x, $y, $z);
glRasterPos3dv_c((CPTR)v);
glRasterPos3dv_p($x, $y, $z);
glRasterPos3dv_s((PACKED)v);
glRasterPos3f($x, $y, $z);
glRasterPos3fv_c((CPTR)v);
glRasterPos3fv_p($x, $y, $z);
glRasterPos3fv_s((PACKED)v);
glRasterPos3i($x, $y, $z);
glRasterPos3iv_c((CPTR)v);
glRasterPos3iv_p($x, $y, $z);
glRasterPos3iv_s((PACKED)v);
glRasterPos3s($x, $y, $z);
glRasterPos3sv_c((CPTR)v);
glRasterPos3sv_p($x, $y, $z);
glRasterPos3sv_s((PACKED)v);
glRasterPos4d($x, $y, $z, $w);
glRasterPos4dv_c((CPTR)v);
glRasterPos4dv_p($x, $y, $z, $w);
glRasterPos4dv_s((PACKED)v);
glRasterPos4f($x, $y, $z, $w);
glRasterPos4fv_c((CPTR)v);
glRasterPos4fv_p($x, $y, $z, $w);
glRasterPos4fv_s((PACKED)v);
glRasterPos4i($x, $y, $z, $w);
glRasterPos4iv_c((CPTR)v);
glRasterPos4iv_p($x, $y, $z, $w);
glRasterPos4iv_s((PACKED)v);
glRasterPos4s($x, $y, $z, $w);
glRasterPos4sv_c((CPTR)v);
glRasterPos4sv_p($x, $y, $z, $w);
glRasterPos4sv_s((PACKED)v);
glReadBuffer($mode);
glReadPixels_c($x, $y, $width, $height, $format, $type, (CPTR)pixels);
glReadPixels_s($x, $y, $width, $height, $format, $type, (PACKED)pixels);
glRectd($x1, $y1, $x2, $y2);
glRectdv_c((CPTR)v1, (CPTR)v2);
glRectdv_s((PACKED)v1, (PACKED)v2);
glRectf($x1, $y1, $x2, $y2);
glRectfv_c((CPTR)v1, (CPTR)v2);
glRectfv_s((PACKED)v1, (PACKED)v2);
glRecti($x1, $y1, $x2, $y2);
glRectiv_c((CPTR)v1, (CPTR)v2);
glRectiv_s((PACKED)v1, (PACKED)v2);
glRects($x1, $y1, $x2, $y2);
glRectsv_c((CPTR)v1, (CPTR)v2);
glRectsv_s((PACKED)v1, (PACKED)v2);
glRenderMode($mode);
glRenderbufferStorageEXT($target,$internalformat,$width,$height);
glRotated($angle, $x, $y, $z);
glRotatef($angle, $x, $y, $z);
glSampleCoverageARB($value,$invert);
glScaled($x, $y, $z);
glScalef($x, $y, $z);
glScissor($x, $y, $width, $height);
glSelectBuffer_c($size, (CPTR)list);
glShadeModel($mode);
glShaderSourceARB_c($shaderObj, $count, (CPTR)string, (CPTR)length);
glShaderSourceARB_p($shaderObj, @string);
glStencilFunc($func, $ref, $mask);
glStencilMask($mask);
glStencilOp($fail, $zfail, $zpass);
glTexCoord1d($s);
glTexCoord1dv_c((PACKED)v);
glTexCoord1dv_p($s);
glTexCoord1f($s);
glTexCoord1fv_c((CPTR)v);
glTexCoord1fv_p($s);
glTexCoord1fv_s((PACKED)v);
glTexCoord1i($s);
glTexCoord1iv_c((CPTR)v);
glTexCoord1iv_p($s);
glTexCoord1iv_s((PACKED)v);
glTexCoord1s($s);
glTexCoord1sv_p($s);
glTexCoord2d($s, $t);
glTexCoord2dv_c((CPTR)v);
glTexCoord2dv_p($s, $t);
glTexCoord2dv_s((PACKED)v);
glTexCoord2f($s, $t);
glTexCoord2fv_c((CPTR)v);
glTexCoord2fv_p($s, $t);
glTexCoord2fv_s((PACKED)v);
glTexCoord2i($s, $t);
glTexCoord2iv_c((CPTR)v);
glTexCoord2iv_p($s, $t);
glTexCoord2iv_s((PACKED)v);
glTexCoord2s($s, $t);
glTexCoord2sv_c((PACKED)v);
glTexCoord2sv_p($s, $t);
glTexCoord3d($s, $t, $r);
glTexCoord3dv_c((CPTR)v);
glTexCoord3dv_p($s, $t, $r);
glTexCoord3dv_s((PACKED)v);
glTexCoord3f($s, $t, $r);
glTexCoord3fv_c((CPTR)v);
glTexCoord3fv_p($s, $t, $r);
glTexCoord3fv_s((PACKED)v);
glTexCoord3i($s, $t, $r);
glTexCoord3iv_c((CPTR)v);
glTexCoord3iv_p($s, $t, $r);
glTexCoord3iv_s((PACKED)v);
glTexCoord3s($s, $t, $r);
glTexCoord3sv_c((CPTR)v);
glTexCoord3sv_p($s, $t, $r);
glTexCoord3sv_s((PACKED)v);
glTexCoord4d($s, $t, $r, $q);
glTexCoord4dv_c((CPTR)v);
glTexCoord4dv_p($s, $t, $r, $q);
glTexCoord4dv_s((PACKED)v);
glTexCoord4f($s, $t, $r, $q);
glTexCoord4fv_c((CPTR)v);
glTexCoord4fv_p($s, $t, $r, $q);
glTexCoord4fv_s((PACKED)v);
glTexCoord4i($s, $t, $r, $q);
glTexCoord4iv_c((CPTR)v);
glTexCoord4iv_p($s, $t, $r, $q);
glTexCoord4iv_s((PACKED)v);
glTexCoord4s($s, $t, $r, $q);
glTexCoord4sv_c((CPTR)v);
glTexCoord4sv_p($s, $t, $r, $q);
glTexCoord4sv_s((PACKED)v);
glTexCoordPointerEXT_c($size, $type, $stride, $count, (CPTR)pointer);
glTexCoordPointerEXT_p($size, (OGA)pointer);
glTexCoordPointerEXT_s($size, $type, $stride, $count, (PACKED)pointer);
glTexCoordPointer_c($size, $type, $stride, (CPTR)pointer);
glTexCoordPointer_p($size, (OGA)pointer);
glTexCoordPointer_s($size, $type, $stride, (PACKED)pointer);
glTexEnvf($target, $pname, $param);
glTexEnvfv_p(target, pname, @params);
glTexEnvfv_s(target, pname, (PACKED)params);
glTexEnvi($target, $pname, $param);
glTexEnviv_p(target, pname, @params);
glTexEnviv_s(target, pname, (PACKED)params);
glTexGend($Coord, $pname, $param);
glTexGendv_c($Coord, $pname, (CPTR)params);
glTexGendv_p($Coord, $pname, @params);
glTexGendv_s($Coord, $pname, (PACKED)params);
glTexGenf($Coord, $pname, $param);
glTexGenfv_c($Coord, $pname, (CPTR)params);
glTexGenfv_p($Coord, $pname, @params);
glTexGenfv_s($Coord, $pname, (PACKED)params);
glTexGeni($Coord, $pname, $param);
glTexGeniv_c($Coord, $pname, (CPTR)params);
glTexGeniv_p($Coord, $pname, @params);
glTexGeniv_s($Coord, $pname, (PACKED)params);
glTexImage1D_c($target, $level, $internalformat, $width, $border, $format, $type, (CPTR)pixels);
glTexImage1D_p($target, $level, $internalformat, $width, $border, $format, $type, @pixels);
glTexImage1D_s($target, $level, $internalformat, $width, $border, $format, $type, (PACKED)pixels);
glTexImage2D_c($target, $level, $internalformat, $width, $height, $border, $format, $type, (CPTR)pixels);
glTexImage2D_p($target, $level, $internalformat, $width, $height, $border, $format, $type, @pixels);
glTexImage2D_s($target, $level, $internalformat, $width, $height, $border, $format, $type, (PACKED)pixels);
glTexImage3DEXT_c($target, $level, $internalformat, $width, $height, $depth, $border, $format, $type, (CPTR)pixels);
glTexImage3DEXT_p($target, $level, $internalformat, $width, $height, $depth, $border, $format, $type, @pixels);
glTexImage3DEXT_s($target, $level, $internalformat, $width, $height, $depth, $border, $format, $type, (PACKED)pixels);
glTexImage3D_c($target, $level, $internalformat, $width, $height, $depth, $border, $format, $type, (CPTR)pixels);
glTexImage3D_p($target, $level, $internalformat, $width, $height, $depth, $border, $format, $type, @pixels);
glTexImage3D_s($target, $level, $internalformat, $width, $height, $depth, $border, $format, $type, (PACKED)pixels);
glTexParameterf($target, $pname, $param);
glTexParameterfv_c($target, $pname, (CPTR)params);
glTexParameterfv_p($target, $pname, @params);
glTexParameterfv_s($target, $pname, (PACKED)params);
glTexParameteri($target, $pname, $param);
glTexParameteriv_c($target, $pname, (CPTR)params);
glTexParameteriv_p($target, $pname, @params);
glTexParameteriv_s($target, $pname, (PACKED)params);
glTexSubImage1D_c($target, $level, $xoffset, $width, $border, $format, $type, (CPTR)pixels);
glTexSubImage1D_p($target, $level, $xoffset, $width, $border, $format, $type, @pixels);
glTexSubImage1D_s($target, $level, $xoffset, $width, $border, $format, $type, (PACKED)pixels);
glTexSubImage2D_c($target, $level, $xoffset, $yoffset, $width, $height, $border, $format, $type, @pixels);
glTexSubImage2D_s($target, $level, $xoffset, $yoffset, $width, $height, $border, $format, $type, (PACKED)pixels);
glTexSubImage3DEXT_c($target, $level, $xoffset, $yoffset, $zoffset, $width, $height, $depth, $format, $type, (CPTR)pixels);
glTexSubImage3DEXT_p($target, $level, $xoffset, $yoffset, $zoffset, $width, $height, $depth, $format, $type, @pixels);
glTexSubImage3DEXT_s($target, $level, $xoffset, $yoffset, $zoffset, $width, $height, $depth, $format, $type, (PACKED)pixels);
glTexSubImage3D_c($target, $level, $xoffset, $yoffset, $zoffset, $width, $height, $depth, $border, $format, $type, (CPTR)pixels);
glTexSubImage3D_p($target, $level, $xoffset, $yoffset, $zoffset, $width, $height, $depth, $border, $format, $type, @pixels);
glTexSubImage3D_s($target, $level, $xoffset, $yoffset, $zoffset, $width, $height, $depth, $border, $format, $type, (PACKED)pixels);
glTranslated($x, $y, $z);
glTranslatef($x, $y, $z);
glUniform1fARB($location, $v0);
glUniform1fvARB_c($location, $count, (CPTR)value);
glUniform1fvARB_p(location, @value);
glUniform1fvARB_s($location, $count, (PACKED)value);
glUniform1iARB($location, $v0);
glUniform1ivARB_c($location, $count, (CPTR)value);
glUniform1ivARB_p($location, @value);
glUniform1ivARB_s($location, $count, (PACKED)value);
glUniform2fARB($location, $v0, $v1);
glUniform2fvARB_c($location, $count, (CPTR)value);
glUniform2fvARB_p($location, @value);
glUniform2fvARB_s($location, $count, (PACKED)value);
glUniform2iARB($location, $v0, $v1);
glUniform2ivARB_c($location, $count, (CPTR)value);
glUniform2ivARB_p($location, @value);
glUniform2ivARB_s($location, $count, (PACKED)value);
glUniform3fARB($location, $v0, $v1, $v2);
glUniform3fvARB_c($location, $count, (CPTR)value);
glUniform3fvARB_p($location, @value);
glUniform3fvARB_s($location, $count, (PACKED)value);
glUniform3iARB($location, $v0, $v1, $v2);
glUniform3ivARB_c($location, $count, (CPTR)value);
glUniform3ivARB_p($location, @value);
glUniform3ivARB_s($location, $count, (PACKED)value);
glUniform4fARB($location, $v0, $v1, $v2, $v3);
glUniform4fvARB_c($location, $count, (CPTR)value);
glUniform4fvARB_p($location, @value);
glUniform4fvARB_s($location, $count, (PACKED)value);
glUniform4iARB($location, $v0, $v1, $v2, $v3);
glUniform4ivARB_c($location, $count, (CPTR)value);
glUniform4ivARB_p($location, @value);
glUniform4ivARB_s($location, $count, (PACKED)value);
glUniformMatrix2fvARB_c($location, $count, $transpose, (CPTR)value);
glUniformMatrix2fvARB_p($location, $transpose, @matrix);
glUniformMatrix2fvARB_s($location, $count, $transpose, (PACKED)value);
glUniformMatrix3fvARB_c($location, $count, $transpose, (CPTR)value);
glUniformMatrix3fvARB_p($location, $transpose, @matrix);
glUniformMatrix3fvARB_s($location, $count, $transpose, (PACKED)value);
glUniformMatrix4fvARB_c($location, $count, $transpose, (CPTR)value);
glUniformMatrix4fvARB_p($location, $transpose, @matrix);
glUniformMatrix4fvARB_s($location, $count, $transpose, (PACKED)value);
glUnmapBufferARB($target);
glUseProgramObjectARB($programObj);
glValidateProgramARB($programObj);
glVertex2d($x, $y);
glVertex2dv_c((CPTR)v);
glVertex2dv_p($x, $y);
glVertex2dv_s((PACKED)v);
glVertex2f($x, $y);
glVertex2f_s((CPTR)v);
glVertex2fv_p($x, $y);
glVertex2i($x, $y);
glVertex2iv_c((CPTR)v);
glVertex2iv_p($x, $y);
glVertex2iv_s((PACKED)v);
glVertex2s($x, $y);
glVertex2sv_c((PACKED)v);
glVertex2sv_p($x, $y);
glVertex3d($x, $y, $z);
glVertex3dv_c((CPTR)v);
glVertex3dv_p($x, $y, $z);
glVertex3dv_s((PACKED)v);
glVertex3f($x, $y, $z);
glVertex3fv_c((CPTR)v);
glVertex3fv_p($x, $y, $z);
glVertex3fv_s((PACKED)v);
glVertex3i(x, y, z);
glVertex3iv_c((CPTR)v);
glVertex3iv_p($x, $y, $z);
glVertex3iv_s((PACKED)v);
glVertex3s($x, $y, $z);
glVertex3sv_c((CPTR)v);
glVertex3sv_p($x, $y, $z);
glVertex3sv_s((PACKED)v);
glVertex4d($x, $y, $z, $w);
glVertex4dv_c((CPTR)v);
glVertex4dv_p($x, $y, $z, $w);
glVertex4dv_s((PACKED)v);
glVertex4f($x, $y, $z, $w);
glVertex4fv_c((CPTR)v);
glVertex4fv_p($x, $y, $z, $w);
glVertex4fv_s((PACKED)v);
glVertex4i($x, $y, $z, $w);
glVertex4iv_c((CPTR)v);
glVertex4iv_p($x, $y, $z, $w);
glVertex4iv_s((PACKED)v);
glVertex4s($x, $y, $z, $w);
glVertex4sv_c((CPTR)v);
glVertex4sv_p($x, $y, $z, $w);
glVertex4sv_s((PACKED)v);
glVertexAttrib1dARB($index,$x);
glVertexAttrib1dvARB_c($index,(CPTR)v);
glVertexAttrib1dvARB_p($index,$x);
glVertexAttrib1dvARB_s($index,(PACKED)v);
glVertexAttrib1fARB($index,$x);
glVertexAttrib1sARB($index,$x);
glVertexAttrib1svARB_c($index,(CPTR)v);
glVertexAttrib1svARB_p($index,$x);
glVertexAttrib1svARB_s($index,(PACKED)v);
glVertexAttrib2dARB($index,$x,$y);
glVertexAttrib2dvARB_c($index,(CPTR)v);
glVertexAttrib2dvARB_p($index,$x,$y);
glVertexAttrib2dvARB_s($index,(PACKED)v);
glVertexAttrib2fARB($index,$x,$y);
glVertexAttrib2sARB($index,$x,$y);
glVertexAttrib2svARB_c($index,(CPTR)v);
glVertexAttrib2svARB_p($index,$x,$y);
glVertexAttrib2svARB_s($index,(PACKED)v);
glVertexAttrib3dARB($index,$x,$y,$z);
glVertexAttrib3dvARB_c($index,(CPTR)v);
glVertexAttrib3dvARB_p($index,$x,$y,$z);
glVertexAttrib3dvARB_s($index,(PACKED)v);
glVertexAttrib3fARB($index,$x,$y,$z);
glVertexAttrib3fvARB_c($index,(CPTR)v);
glVertexAttrib3fvARB_p($index,$x,$y,$z);
glVertexAttrib3fvARB_s($index,(PACKED)v);
glVertexAttrib3sARB($index,$x,$y,$z);
glVertexAttrib3svARB_c($index,(CPTR)v);
glVertexAttrib3svARB_p($index,$x,$y,$z);
glVertexAttrib3svARB_s($index,(PACKED)v);
glVertexAttrib4NbvARB_c($index,(CPTR)v);
glVertexAttrib4NbvARB_p($index,$x,$y,$z,$w);
glVertexAttrib4NbvARB_s($index,(PACKED)v);
glVertexAttrib4NivARB_c($index,(CPTR)v);
glVertexAttrib4NivARB_p($index,$x,$y,$z,$w);
glVertexAttrib4NivARB_s($index,(PACKED)v);
glVertexAttrib4NsvARB_c($index,(CPTR)v);
glVertexAttrib4NsvARB_p($index,$x,$y,$z,$w);
glVertexAttrib4NsvARB_s($index,(PACKED)v);
glVertexAttrib4NubARB($index,$x,$y,$z,$w);
glVertexAttrib4NubvARB_c($index,(CPTR)v);
glVertexAttrib4NubvARB_p($index,$x,$y,$z,$w);
glVertexAttrib4NubvARB_s($index,(PACKED)v);
glVertexAttrib4NuivARB_c($index,(CPTR)v);
glVertexAttrib4NuivARB_p($index,$x,$y,$z,$w);
glVertexAttrib4NuivARB_s($index,(PACKED)v);
glVertexAttrib4NusvARB_c($index,(CPTR)v);
glVertexAttrib4NusvARB_p($index,$x,$y,$z,$w);
glVertexAttrib4NusvARB_s($index,(PACKED)v);
glVertexAttrib4bvARB_c($index,(CPTR)v);
glVertexAttrib4bvARB_p($index,$x,$y,$z,$w);
glVertexAttrib4bvARB_s($index,(PACKED)v);
glVertexAttrib4dARB($index,$x,$y,$z,$w);
glVertexAttrib4dvARB_c($index,(CPTR)v);
glVertexAttrib4dvARB_p($index,$x,$y,$z,$w);
glVertexAttrib4dvARB_s($index,(PACKED)v);
glVertexAttrib4fARB($index,$x,$y,$z,$w);
glVertexAttrib4fvARB_c($index,(CPTR)v);
glVertexAttrib4fvARB_p($index,$x,$y,$z,$w);
glVertexAttrib4fvARB_s($index,(PACKED)v);
glVertexAttrib4ivARB_c($index,(CPTR)v);
glVertexAttrib4ivARB_p($index,$x,$y,$z,$w);
glVertexAttrib4ivARB_s($index,(PACKED)v);
glVertexAttrib4sARB($index,$x,$y,$z,$w);
glVertexAttrib4svARB_c($index,(CPTR)v);
glVertexAttrib4svARB_p($index,$x,$y,$z,$w);
glVertexAttrib4svARB_s($index,(PACKED)v);
glVertexAttrib4ubvARB_c($index,(CPTR)v);
glVertexAttrib4ubvARB_p($index,$x,$y,$z,$w);
glVertexAttrib4ubvARB_s($index,(PACKED)v);
glVertexAttrib4uivARB_c($index,(CPTR)v);
glVertexAttrib4uivARB_p($index,$x,$y,$z,$w);
glVertexAttrib4uivARB_s($index,(PACKED)v);
glVertexAttrib4usvARB_c($index,(PACKED)v);
glVertexAttrib4usvARB_p($index,$x,$y,$z,$w);
glVertexAttribPointerARB_c($index,$size,$type,$normalized,$stride,(CPTR)pointer);
glVertexAttribPointerARB_p($index,$type,$normalized,$stride,@attribs);
glVertexPointerEXT_c($size, $type, $stride, $count, (CPTR)pointer);
glVertexPointerEXT_p($size, (OGA)pointer);
glVertexPointerEXT_s($size, $type, $stride, $count, (PACKED)pointer);
glVertexPointer_c($size, $type, $stride, (CPTR)pointer);
glVertexPointer_p($size, $type, $stride, (OGA)pointer);
glVertexPointer_s($size, $type, $stride, (PACKED)pointer);
glViewport($x, $y, $width, $height);
